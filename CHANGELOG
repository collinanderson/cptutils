Changes $Id: CHANGELOG,v 1.32 2007/01/25 00:20:41 jjg Exp jjg $

1.29 pre
  - new program cpthsv
  - cptcss format string bugfix
  - moved dp-simplify out of gimpcpt and into svg-simplify
  - fixed fencepost error in common/cpt.c cpt_npc
  - updated author homepage

1.28 (28 Oct 2006)
  - svgpsp now supports the -a (convert all gradients) switch

1.27 (28 Sep 2006)
  - added the default version to psp structure, fixing a bug
    whereby svgpsp produced psp files with no version (these
    could not be read by pspx) 
  - fixed command-line bug in svgx

1.26 (1 Sep 2006)
  PaintShop Pro special, the psp format is now completely
  reverse engineered: see src/common/README.psp
  - pspread.c now also parses the opacity gradient and 
    midpoints of the segments.
  - new pspwrite.c writes psp gradients  
  - pspcpt(1) now prints out the opacity gradient and gives
    warnings if there are uncentred midpoints or any 
    tranparency. 
  - svgx now also outputs the psp format, and the wrapper
    script svgpsp(1) is provided.

1.25 (28 Aug 2006)
  - povray output now has the name beautified (converted to
    only alphanumerics and underscore) to avoid povray parse
    errors.

1.24 (04 Dec 2005)
  - all cpt writing  programs now have -b -f and -n flags, so 
    svgx -n (name) argument is now -N 

1.23 (03 Dec 2005)
  - xycpt cleanup

1.22 (21 Nov 2005)
  - added new program avlcpt, converting the ArcView legend
    format (if it contains a gradient).
  - above uses libodb which parses ODB format files and serialises
    them into a convenient array structure. this might be of 
    independent interest -- see src/common/README.libodb

1.21 (11 Nov 2005)
  - fixed bad default format string for td class label
    in cptcss

1.20 (21 Sep 2005)
  - svgx povray output now works when extraction of all  
    gradients (-a) is specified
  - svgx povray output now has abitrarily many stops (even
    though 20 is the max in the specification) if the
    new -p (permissive) flag is given 

1.19 (29 Aug 2005)
  - added a povray colour-map output format for svgx,
    so we now have an svgpov wrapper.

1.18 (20 July 2005)
  - added new program cptcss which writes the colours
    from a discrete cpt file to a fragment of CSS (for
    colouring the cells in a table). The original plan
    was to put this functionality into cpttext, but the
    output is a bit different in that there is no idea
    of a z-value in the css, just an order.     

1.17 (3 June 2005)
  - removed redundant (but harmless) stops in cptsvg,
    which is now finshed apart from support for hsv & 
    non-colour fill types
     
1.16 : (1 June 2005)
  - new program cptsvg

1.15 : (17 April 2005)
  - added 'B' to the possible annotation types in
    cptparse.y
  - enabled debug output for cpt parser

1.14 : (unreleased)
  - fixed bug in pspcpt which gave zero-length 
    z-slices for some files

1.13 : (unreleased)
  - new input filter for paintshop pro gradients.
    this is reverse engineered partial implementation
    which at least gets the colour samples. it does
    not extract
    - repetition
    - the alpha channel
    - angles
    - the smoothing parameter
  - new program pspcpt, converts photoshop pro gradients
    to cpt

1.12 :
  - new program cpttext, prints text in the colours of
    a specified cpt-file (just html the moment)  

1.11 : (unreleased)
  - new program xycpr, converts column data to cpr format
 
1.10 : (unreleased)
  - split libgimpcpt to libfill, libcpt and libggr

1.9 : (unreleased)
  - replaced the cpt read function in cpt.c by the custom
    bison/flex parser, which now seems to be able to 
    completely capture the contents of a cpt file. 
    New files cptparse.y cptscan.l cptio.c cptio.h
  - the cpt type in cpt.h has been extended to hold
    the extra data (annotations, hatchures etc). New 
    file fill.h defines a fill type, which could be 
    colour, greyscale, hatchure or file. 
  - all programs now compile with the new cpt type, 
    all cpt files in cpt-city are parsed by the new
    parser.    

1.8 : (unreleased)
  - corrected minor glitch in common/cpt.c, now whitespace   
    at the start of the line does not cause a scan failure.
  - cptinfo now reads the file size.

1.7 : (unreleased)
  - added cptinfo program for the "cpt city" website  

1.6 : (unreleased)
  - added cpt simplification to gimpcpt, with some extra
    code needed in common/cpt.c and  common/colour.c

1.5 : (unreleased)
  - gimpcpt repaired to work with the changes in colour.c
  - first version of the cptgimp manual page

1.4 : (unreleased)
  cptgimp implemented
  - extended colour.h to handle the hsv & rgb colour types in 
    cpt files
  - cptgimp is lossless since the ggr format can easily capture
    any cpt rgb/hsv linear spline, natively. 
  - got confused by the myriad colour types in colour.c, so 
    reorganised the naming convertions, and standardised the 
    interface.
  - all the GMT standard palettes now seem to be converted
    correctly, sent a tarball to some hungry alpha testers
  - this all breaks gimpcpt

1.3 :
  converted gimpcpt to use gengetopt, which lead
  to tidying up of the makefile/configure setup. 
  Redid the test targets in gimpcpt

1.02 :
  some reorganisation prior to coding up cptgimp:
  - split code between common & gimpcpt diretcories
  - added Common.mk
  - tidied up Makefiles a bit

1.01 :
  minor modification to handle the change to the
  gimp's gradient file format: an additional line
	
     Name: <name>

  has been added to the files, and they are given
  the .grd extension. 
  - we now check the second line of the file to see
    if it a name line, and if so save that to print
    in the output cpt file
  - we search for gradients (still with typeglobs) 
    with names <name> and <name>.grd
  - header in output cpt file tidied a little

1.00 :
  minor documentation changes 

0.94 :
  src/gradient.c now handles gradients which lie 
  about the number of segments they contain (but 
  issues a warning if the declared number differs 
  from th number found). All of the AG gradients
  can now be converted.

0.93 :
  animation target prettified
  target <gradient>.png (make a povray rendering) added
  Makefile tidied

0.92 :
  src/anim.ini added
  src/Makefile.in extra target *.gif added, makes
    a gif animation of the gradient in RGB space, mmm.

0.91 : 
  src/Makefile corrections
  INSTALL corrections     

0.90 : 
  initial public release
