dnl Process this file with autoconf to produce a configure script.

AC_INIT(cptutils, 1.55, j.j.green@gmx.fr)

m4_include([m4/ax_check_define.m4])
m4_include([m4/ax_check_compile_flag.m4])

dnl Checks for programs.

AC_PROG_CC

AX_CHECK_COMPILE_FLAG([-Wall], 
	AC_SUBST(CFEXTRA, [-Wall]),
	AC_SUBST(CFEXTRA, []))
AX_CHECK_COMPILE_FLAG([-Wno-unused-but-set-variable],
	AC_SUBST(CFNUBS, [-Wno-unused-but-set-variable]),
	AC_SUBST(CFNUBS, []))

AC_PROG_CC_STDC
AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_PATH_PROG(PYTHON, python, no)
if test "$PYTHON" = no; then
  AC_MSG_WARN(no python! (no convert-gradient for you))       
fi

AC_PATH_PROG(GGO, gengetopt, no)
if test "$GGO" = no; then
  AC_MSG_WARN(no gengetopt! (not needed for compile))       
fi

AC_PATH_PROG(GPERF, gperf, no)
if test "$GPERF" = no; then
  AC_MSG_WARN(no gperf! (not needed for compile))       
fi

AC_PATH_PROG(XML2C, xml2-config, no)
if test "$XML2C" = no
then
  AC_MSG_ERROR(no xml2-config! please install libxml2) 
else
  CFLAGS="$CFLAGS `$XML2C --cflags`"
  LIBS="$LIBS `$XML2C --libs`"
fi

AC_PATH_PROG(XSLTP, xsltproc, no)
if test "$XSLTP" = no; then
  AC_MSG_WARN(no xsltproc! (not needed for compile))       
fi

if test "$GCC"x = yesx; then
  CFLAGS="$CFLAGS $CFXTRA"
fi

AC_PATH_PROG(BC, bc, no)
if test "$BC" = no; then
  AC_MSG_WARN(no bc! (not needed for compile)) 
fi

dnl Checks for libraries.

AC_CHECK_LIB(m, pow)
AC_CHECK_LIB(png, png_create_read_struct, [], AC_MSG_ERROR(libpng not found))
AC_CHECK_LIB(jansson, json_pack, [], AC_MSG_WARN(libjansson not found))
AC_CHECK_LIB(iconv, iconv, [], AC_MSG_ERROR(iconv not found))


dnl Checks for header files.

AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(iconv.h)
AC_CHECK_HEADERS(locale.h)
AC_CHECK_HEADERS(png.h)
AC_CHECK_HEADERS(search.h)
AC_CHECK_HEADERS(jansson.h)

dnl Checks for library functions.

AC_CHECK_FUNCS(strdup)
AC_CHECK_FUNCS(getopt)
AC_CHECK_FUNCS(tsearch)
AC_CHECK_FUNCS(hsearch)

dnl special case, check for be64toh which is usually a 
dnl macro defined in endian.h

AC_CHECK_HEADERS([endian.h],
	AX_CHECK_DEFINE([endian.h], [be64toh],,
		AC_CHECK_FUNCS(be64toh)))
AC_CHECK_HEADERS([sys/endian.h],
	AX_CHECK_DEFINE([endian.h], [be64toh],,
		AC_CHECK_FUNCS(be64toh)))

dnl cunit option

opt_enable_tests=no

AC_ARG_ENABLE(tests,
        AC_HELP_STRING([--enable-tests],[unit testing support (default is no)]),
        [ opt_enable_tests=$enableval ])

if test $opt_enable_tests = yes; then
   AC_CHECK_LIB(cunit, CU_add_test)      
   AC_SUBST(WITH_UNIT, 1)
fi

dnl used by gengetop output

AC_DEFINE(VERSION, PACKAGE_VERSION, "version of package")

dnl used in Common.mk 

AC_SUBST(PACKAGE_VERSION)

dnl Make a config.h

AC_CONFIG_HEADER(src/common/config.h)

dnl Create Makefile data

AC_OUTPUT([Makefile src/Common.mk])

